apiVersion: v1
kind: Namespace
metadata:
  name: development
  labels:
    name: development
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lifestore
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lifestore
  template:
    metadata:
      labels:
        app: lifestore
    spec:
      containers:
      - name: lifestore
        image: dgopsdrew/store-front:v1
        envFrom:
        - secretRef:
            name: env-vars
        - configMapRef:
            name: db-settings            
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
        readinessProbe:
          exec:
            command:
              - "/bin/sh"
              - "-c"
              - "pgrep apache2" # I wanted to orginally check the DB connection but that doesn't seem like the correct approach instead we focus on what only this contain offers
        # lifecycle: #! TO BREAK THE DB CONNECTION
        #   postStart:
        #     exec:
        #       command:
        #         - "/bin/bash"
        #         - "-c"
        #         - "rm -f connection.php" 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lifestore-db
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lifestore-db
  template:
    metadata:
      labels:
        app: lifestore-db
    spec:
      containers:
      - name: lifestore-db
        image: dgopsdrew/store-db:v1
        volumeMounts:
          - name: mysql-data
            mountPath: /var/lib/mysql
        envFrom:
        - secretRef:
            name: env-vars
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 3306
        livenessProbe:
          exec:
            command: 
            - "/bin/sh"
            - "-c"
            - "mysql -u root -h lifestore-svc-db -p$(echo $MYSQL_PASSWORD) -e 'SELECT 1'" # NEed to change out connection strings in config map so that that I don't have the host manually inputted
            # ["mysql", "-u", "root","-p$(echo $MYSQL_PASSWORD)", "-e", "SELECT COUNT(*) FROM store.users"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - "/bin/sh"
              - "-c"
              # - "mysql -u root -p$(echo $MYSQL_PASSWORD) -e 'SELECT 1'"
              - "mysql -u root -p$(echo $MYSQL_PASSWORD) -e 'SELECT COUNT(*) FROM store.users'"
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
        
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data-claim     
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-claim
  namespace: development
spec:
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
            
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: lifestore
    name: lifestore-svc
    namespace: development
spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 80
    selector:
        app: lifestore
    type: LoadBalancer
---    
apiVersion: v1
kind: Service
metadata:
    labels:
        app: lifestore-db
    name: lifestore-svc-db
    namespace: development
spec:
    ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
        app: lifestore-db



